library(tidyverse)

test_rule <- \(rule, update){
  if (update == ''){
    return(FALSE)
  }
  left_present <- str_detect(update, rule[1])
  right_present <- str_detect(update, rule[2])
  pattern <- paste0(rule[1],'.*?', rule[2])
  pattern_present <- str_detect(update, pattern)
  if (!left_present || !right_present){
    return(TRUE)
  } else if (pattern_present) {
    return(TRUE) 
  } else {
    return(FALSE)  
  }
}

test_rules <- \(update){
  rules %>% 
    map_lgl(\(rule) {test_rule(rule, update)}) %>% 
    all()
}

input <- 
  read_file('day05/input') %>% 
  str_split('\n\n', simplify = T) %>% 
  as.character() %>% 
  map(~str_split(., '\n')) %>% 
  flatten()

rules <- input[[1]] %>% map(~str_split(., '\\|') %>% unlist())
updates <- input[[2]] %>% keep(!. == '')

updates %>% 
  keep(test_rules) %>% 
  map(str_split, ',') %>% 
  map(. %>% unlist() %>% as.numeric) %>% 
  map_dbl(\(x) x[(length(x) %/% 2) + 1]) %>% 
  sum

# part 2
incorrect <- updates %>% keep(~!test_rules(.))

reorder_update <- \(update){
  
}